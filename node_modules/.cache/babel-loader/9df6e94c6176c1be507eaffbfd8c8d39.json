{"ast":null,"code":"var Layer = {\n  props: {\n    pane: {\n      type: String,\n      default: 'overlayPane'\n    },\n    attribution: {\n      type: String,\n      default: null,\n      custom: true\n    },\n    name: {\n      type: String,\n      custom: true,\n      default: undefined\n    },\n    layerType: {\n      type: String,\n      custom: true,\n      default: undefined\n    },\n    visible: {\n      type: Boolean,\n      custom: true,\n      default: true\n    }\n  },\n  mounted: function mounted() {\n    this.layerOptions = {\n      attribution: this.attribution,\n      pane: this.pane\n    };\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.unbindPopup();\n    this.unbindTooltip();\n    this.parentContainer.removeLayer(this);\n  },\n  methods: {\n    setAttribution: function setAttribution(val, old) {\n      var attributionControl = this.$parent.mapObject.attributionControl;\n      attributionControl.removeAttribution(old).addAttribution(val);\n    },\n    setName: function setName() {\n      this.parentContainer.removeLayer(this);\n\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setLayerType: function setLayerType() {\n      this.parentContainer.removeLayer(this);\n\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setVisible: function setVisible(isVisible) {\n      if (this.mapObject) {\n        if (isVisible) {\n          this.parentContainer.addLayer(this);\n        } else {\n          if (this.parentContainer.hideLayer) {\n            this.parentContainer.hideLayer(this);\n          } else {\n            this.parentContainer.removeLayer(this);\n          }\n        }\n      }\n    },\n    unbindTooltip: function unbindTooltip() {\n      var tooltip = this.mapObject ? this.mapObject.getTooltip() : null;\n\n      if (tooltip) {\n        tooltip.unbindTooltip();\n      }\n    },\n    unbindPopup: function unbindPopup() {\n      var popup = this.mapObject ? this.mapObject.getPopup() : null;\n\n      if (popup) {\n        popup.unbindPopup();\n      }\n    },\n    updateVisibleProp: function updateVisibleProp(value) {\n      /**\n       * Triggers when the visible prop needs to be updated\n       * @type {boolean}\n       * @property {boolean} value - value of the visible property\n       */\n      this.$emit('update:visible', value);\n    }\n  }\n};\nexport default Layer;","map":{"version":3,"names":["Layer","props","pane","type","String","default","attribution","custom","name","undefined","layerType","visible","Boolean","mounted","layerOptions","beforeDestroy","unbindPopup","unbindTooltip","parentContainer","removeLayer","methods","setAttribution","val","old","attributionControl","$parent","mapObject","removeAttribution","addAttribution","setName","addLayer","setLayerType","setVisible","isVisible","hideLayer","tooltip","getTooltip","popup","getPopup","updateVisibleProp","value","$emit"],"sources":["/Users/macbook/Documents/projects/assigment/test13/node_modules/vue2-leaflet/dist/mixins/Layer.js"],"sourcesContent":["var Layer = {\n  props: {\n    pane: {\n      type: String,\n      default: 'overlayPane',\n    },\n    attribution: {\n      type: String,\n      default: null,\n      custom: true,\n    },\n    name: {\n      type: String,\n      custom: true,\n      default: undefined,\n    },\n    layerType: {\n      type: String,\n      custom: true,\n      default: undefined,\n    },\n    visible: {\n      type: Boolean,\n      custom: true,\n      default: true,\n    },\n  },\n  mounted: function mounted() {\n    this.layerOptions = {\n      attribution: this.attribution,\n      pane: this.pane,\n    };\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.unbindPopup();\n    this.unbindTooltip();\n    this.parentContainer.removeLayer(this);\n  },\n  methods: {\n    setAttribution: function setAttribution(val, old) {\n      var attributionControl = this.$parent.mapObject.attributionControl;\n      attributionControl.removeAttribution(old).addAttribution(val);\n    },\n    setName: function setName() {\n      this.parentContainer.removeLayer(this);\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setLayerType: function setLayerType() {\n      this.parentContainer.removeLayer(this);\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setVisible: function setVisible(isVisible) {\n      if (this.mapObject) {\n        if (isVisible) {\n          this.parentContainer.addLayer(this);\n        } else {\n          if (this.parentContainer.hideLayer) {\n            this.parentContainer.hideLayer(this);\n          } else {\n            this.parentContainer.removeLayer(this);\n          }\n        }\n      }\n    },\n    unbindTooltip: function unbindTooltip() {\n      var tooltip = this.mapObject ? this.mapObject.getTooltip() : null;\n      if (tooltip) {\n        tooltip.unbindTooltip();\n      }\n    },\n    unbindPopup: function unbindPopup() {\n      var popup = this.mapObject ? this.mapObject.getPopup() : null;\n      if (popup) {\n        popup.unbindPopup();\n      }\n    },\n    updateVisibleProp: function updateVisibleProp(value) {\n      /**\n       * Triggers when the visible prop needs to be updated\n       * @type {boolean}\n       * @property {boolean} value - value of the visible property\n       */\n      this.$emit('update:visible', value);\n    },\n  },\n};\n\nexport default Layer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
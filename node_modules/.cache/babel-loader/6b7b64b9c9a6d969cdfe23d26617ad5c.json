{"ast":null,"code":"//\n//\n//\n//\nimport resizeChart from \"@/mixins/resizeChart\";\nconst average = {\n  data: [{\n    type: \"average\"\n  }],\n  lineStyle: {\n    type: 'solid'\n  },\n  label: {\n    show: true,\n    position: 'end',\n    formatter: '  ${c} \\n Average'\n  },\n  symbol: \"none\"\n};\nexport default {\n  name: \"BarHorizontalChart\",\n  mixins: [resizeChart],\n  props: {\n    backgroundColor: {\n      type: String,\n      default: '#ECECF4'\n    },\n    itemColor: {\n      type: String,\n      default: '#5B6270'\n    },\n    barWidth: {\n      type: [String, Number],\n      default: 'auto'\n    },\n    dataChart: {\n      type: Array,\n      default: () => []\n    },\n    dataYAxis: {\n      type: Array,\n      default: () => []\n    },\n    showYLabels: {\n      type: Boolean,\n      default: true\n    },\n    showBarLabels: {\n      type: Boolean,\n      default: false\n    },\n    isGradient: {\n      type: Boolean,\n      default: false\n    },\n    haveAverage: {\n      type: Boolean,\n      default: false\n    },\n    markLineOptions: {\n      type: Object,\n      default: () => {}\n    }\n  },\n\n  data() {\n    const self = this;\n    return {\n      barOptions: {\n        grid: {\n          left: self.showYLabels ? '0%' : '-20%',\n          right: '2%',\n          bottom: '2%',\n          top: '20%',\n          containLabel: true\n        },\n        tooltip: {\n          trigger: 'item',\n          axisPointer: {\n            type: 'shadow'\n          },\n          formatter: params => {\n            return `<p>$${params.value}</p>`;\n          }\n        },\n        label: {\n          show: self.showBarLabels,\n          position: 'right',\n          formatter: '{b}',\n          fontStyle: 10\n        },\n        legend: {\n          show: false\n        },\n        xAxis: {\n          type: 'value',\n          boundaryGap: [0, 0.01],\n          show: false,\n          max: 30000\n        },\n        yAxis: {\n          type: 'category',\n          data: self.dataYAxis,\n          show: self.showYLabels,\n          axisTick: {\n            alignWithLabel: true\n          },\n          axisLabel: {\n            fontSize: 10\n          }\n        },\n        series: [{\n          barWidth: self.barWidth,\n          showBackground: true,\n          backgroundStyle: {\n            color: self.isGradient ? {\n              type: 'linear',\n              x: 0,\n              y: 0,\n              x2: 1,\n              y2: 1,\n              colorStops: [{\n                offset: 0,\n                color: 'rgba(0, 255, 0, 0.05)' // color at 0%\n\n              }, {\n                offset: 1,\n                color: 'rgba(255, 0, 0, 0.05)' // color at 100%\n\n              }],\n              global: false // default is false\n\n            } : self.backgroundColor,\n            borderRadius: [0, 3, 3, 0]\n          },\n          itemStyle: {\n            color: self.itemColor,\n            borderRadius: [0, 3, 3, 0],\n            borderWidth: 1,\n            borderType: 'solid'\n          },\n          type: 'bar',\n          data: self.dataChart,\n          markLine: self.haveAverage ? average : self.markLineOptions\n        }]\n      }\n    };\n  },\n\n  mounted() {\n    this.setRefElement('horizontalChart');\n  }\n\n};","map":{"version":3,"mappings":";;;;AAKA;AAEA;EACAA;IACAC;EADA,EADA;EAIAC;IACAD;EADA,CAJA;EAOAE;IACAC,UADA;IAEAC,eAFA;IAGAC;EAHA,CAPA;EAYAC;AAZA;AAcA;EACAC,0BADA;EAEAC,qBAFA;EAGAC;IACAC;MACAV,YADA;MAEAW;IAFA,CADA;IAKAC;MACAZ,YADA;MAEAW;IAFA,CALA;IASAE;MACAb,sBADA;MAEAW;IAFA,CATA;IAaAG;MACAd,WADA;MAEAW;IAFA,CAbA;IAiBAI;MACAf,WADA;MAEAW;IAFA,CAjBA;IAqBAK;MACAhB,aADA;MAEAW;IAFA,CArBA;IAyBAM;MACAjB,aADA;MAEAW;IAFA,CAzBA;IA6BAO;MACAlB,aADA;MAEAW;IAFA,CA7BA;IAiCAQ;MACAnB,aADA;MAEAW;IAFA,CAjCA;IAqCAS;MACApB,YADA;MAEAW;IAFA;EArCA,CAHA;;EA6CAZ;IACA;IACA;MACAsB;QACAC;UACAC,sCADA;UAEAC,WAFA;UAGAC,YAHA;UAIAC,UAJA;UAKAC;QALA,CADA;QAQAC;UACAC,eADA;UAEAC;YACA9B;UADA,CAFA;UAKAK;YACA;UACA;QAPA,CARA;QAiBAH;UACAC,wBADA;UAEAC,iBAFA;UAGAC,gBAHA;UAIA0B;QAJA,CAjBA;QAuBAC;UACA7B;QADA,CAvBA;QA0BA8B;UACAjC,aADA;UAEAkC,sBAFA;UAGA/B,WAHA;UAIAgC;QAJA,CA1BA;QAgCAC;UACApC,gBADA;UAEAD,oBAFA;UAGAI,sBAHA;UAIAkC;YACAC;UADA,CAJA;UAOAC;YACAC;UADA;QAPA,CAhCA;QA2CAC,SACA;UACA5B,uBADA;UAEA6B,oBAFA;UAGAC;YACAC;cACA5C,cADA;cAEA6C,IAFA;cAGAC,IAHA;cAIAC,KAJA;cAKAC,KALA;cAMAC;gBACAC,SADA;gBACAN,8BADA,CACA;;cADA,GAEA;gBACAM,SADA;gBACAN,8BADA,CACA;;cADA,CAFA,CANA;cAWAO,aAXA,CAWA;;YAXA,IAYAC,oBAbA;YAcAC;UAdA,CAHA;UAmBAC;YACAV,qBADA;YAEAS,0BAFA;YAGAE,cAHA;YAIAC;UAJA,CAnBA;UAyBAxD,WAzBA;UA0BAD,oBA1BA;UA2BA0D;QA3BA,CADA;MA3CA;IADA;EA6EA,CA5HA;;EA6HAC;IACA;EACA;;AA/HA","names":["data","type","lineStyle","label","show","position","formatter","symbol","name","mixins","props","backgroundColor","default","itemColor","barWidth","dataChart","dataYAxis","showYLabels","showBarLabels","isGradient","haveAverage","markLineOptions","barOptions","grid","left","right","bottom","top","containLabel","tooltip","trigger","axisPointer","fontStyle","legend","xAxis","boundaryGap","max","yAxis","axisTick","alignWithLabel","axisLabel","fontSize","series","showBackground","backgroundStyle","color","x","y","x2","y2","colorStops","offset","global","self","borderRadius","itemStyle","borderWidth","borderType","markLine","mounted"],"sourceRoot":"src/components/universal/Charts","sources":["BarHorizontalChart.vue"],"sourcesContent":["<template>\n  <v-chart ref=\"horizontalChart\" class=\"h-[14rem]\" :option=\"barOptions\"/>\n</template>\n\n<script>\nimport resizeChart from \"@/mixins/resizeChart\";\n\nconst average = {\n    data: [{\n      type: \"average\"\n    }],\n    lineStyle: {\n      type: 'solid'\n    },\n    label: {\n      show: true,\n      position: 'end',\n      formatter: '  ${c} \\n Average'\n    },\n    symbol: \"none\"\n  }\nexport default {\n  name: \"BarHorizontalChart\",\n  mixins: [ resizeChart ],\n  props: {\n    backgroundColor: {\n      type: String,\n      default: '#ECECF4'\n    },\n    itemColor: {\n      type: String,\n      default: '#5B6270'\n    },\n    barWidth: {\n      type: [String, Number],\n      default: 'auto'\n    },\n    dataChart: {\n      type: Array,\n      default: () => []\n    },\n    dataYAxis: {\n      type: Array,\n      default: () => []\n    },\n    showYLabels: {\n      type: Boolean,\n      default: true\n    },\n    showBarLabels: {\n      type: Boolean,\n      default: false\n    },\n    isGradient: {\n      type: Boolean,\n      default: false\n    },\n    haveAverage: {\n      type: Boolean,\n      default: false\n    },\n    markLineOptions: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  data() {\n    const self = this\n    return {\n      barOptions: {\n        grid: {\n          left: self.showYLabels ? '0%' : '-20%',\n          right: '2%',\n          bottom: '2%',\n          top: '20%',\n          containLabel: true,\n        },\n        tooltip: {\n          trigger: 'item',\n          axisPointer: {\n            type: 'shadow'\n          },\n          formatter: params => {\n            return `<p>$${params.value}</p>`\n          }\n        },\n        label: {\n          show: self.showBarLabels,\n          position: 'right',\n          formatter: '{b}',\n          fontStyle: 10\n        },\n        legend: {\n          show: false\n        },\n        xAxis: {\n          type: 'value',\n          boundaryGap: [0, 0.01],\n          show: false,\n          max: 30000\n        },\n        yAxis: {\n          type: 'category',\n          data: self.dataYAxis,\n          show: self.showYLabels,\n          axisTick: {\n            alignWithLabel: true\n          },\n          axisLabel: {\n            fontSize: 10\n          }\n        },\n        series: [\n          {\n            barWidth: self.barWidth,\n            showBackground: true,\n            backgroundStyle: {\n              color: self.isGradient ? {\n                type: 'linear',\n                x: 0,\n                y: 0,\n                x2: 1,\n                y2: 1,\n                colorStops: [{\n                  offset: 0, color: 'rgba(0, 255, 0, 0.05)' // color at 0%\n                }, {\n                  offset: 1, color: 'rgba(255, 0, 0, 0.05)' // color at 100%\n                }],\n                global: false // default is false\n              } : self.backgroundColor,\n              borderRadius: [0, 3, 3 ,0]\n            },\n            itemStyle: {\n              color: self.itemColor,\n              borderRadius: [0, 3, 3, 0],\n              borderWidth: 1,\n              borderType: 'solid'\n            },\n            type: 'bar',\n            data: self.dataChart,\n            markLine: self.haveAverage ? average : self.markLineOptions\n          }\n        ]\n      }\n    }\n  },\n  mounted() {\n    this.setRefElement('horizontalChart')\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"//\n//\n//\n//\nimport resizeChart from \"@/mixins/resizeChart\";\nexport default {\n  name: \"BusinessChart\",\n  mixins: [resizeChart],\n  props: {\n    chartData: {\n      type: Array,\n      default: () => []\n    },\n    stepLineColor: {\n      type: String,\n      default: '#3B82F6'\n    }\n  },\n\n  data() {\n    const self = this;\n    return {\n      businessOptions: {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        grid: {\n          left: '-7%',\n          right: '4%',\n          bottom: '3%',\n          top: '4%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          show: false,\n          axisLine: {\n            onZero: true\n          },\n          data: self.chartData.map(el => el?.labelName)\n        },\n        yAxis: {\n          type: 'value',\n          show: false\n        },\n        series: [{\n          name: 'Placeholder',\n          type: 'bar',\n          barWidth: 80,\n          stack: 'Total',\n          itemStyle: {\n            borderColor: 'transparent',\n            color: 'transparent'\n          },\n          emphasis: {\n            itemStyle: {\n              borderColor: 'transparent',\n              color: 'transparent'\n            }\n          },\n          data: self.chartData.map(el => el?.marginBottom)\n        }, {\n          name: 'Life Cost',\n          type: 'bar',\n          stack: 'Total',\n          label: {\n            show: true,\n            position: 'top',\n            fontSize: 10,\n            fontWeight: 'bold',\n            overflow: 'truncate',\n            ellipsis: '...',\n            formatter: params => `${params.name} $${params.data.price}`\n          },\n          data: self.chartData.map(el => {\n            return {\n              value: el.value,\n              price: el.price,\n              itemStyle: {\n                color: el.color\n              }\n            };\n          })\n        }, {\n          name: 'Step Start',\n          type: 'line',\n          step: 'middle',\n          connectNulls: true,\n          symbol: 'none',\n          endLabel: {\n            show: true,\n            color: self.stepLineColor,\n            align: 'right',\n            verticalAlign: 'bottom',\n            distance: 80,\n            formatter: params => {\n              return `Markets ${params.data.price - 0.01}`;\n            }\n          },\n          lineStyle: {\n            color: self?.stepLineColor,\n            width: 1\n          },\n          data: self.chartData.map(el => {\n            return {\n              value: el?.value,\n              price: el?.price\n            };\n          })\n        }]\n      }\n    };\n  },\n\n  mounted() {\n    this.setRefElement('businessChart');\n  }\n\n};","map":{"version":3,"mappings":";;;;AAKA;AACA;EACAA,qBADA;EAEAC,qBAFA;EAGAC;IACAC;MACAC,WADA;MAEAC;IAFA,CADA;IAKAC;MACAF,YADA;MAEAC;IAFA;EALA,CAHA;;EAaAE;IACA;IACA;MACAC;QACAC;UACAC,eADA;UAEAC;YACAP;UADA;QAFA,CADA;QAOAQ;UACAC,WADA;UAEAC,WAFA;UAGAC,YAHA;UAIAC,SAJA;UAKAC;QALA,CAPA;QAcAC;UACAd,gBADA;UAEAe,WAFA;UAGAC;YACAC;UADA,CAHA;UAMAd;QANA,CAdA;QAsBAe;UACAlB,aADA;UAEAe;QAFA,CAtBA;QA0BAI,SACA;UACAvB,mBADA;UAEAI,WAFA;UAGAoB,YAHA;UAIAC,cAJA;UAKAC;YACAC,0BADA;YAEAC;UAFA,CALA;UASAC;YACAH;cACAC,0BADA;cAEAC;YAFA;UADA,CATA;UAeArB;QAfA,CADA,EAkBA;UACAP,iBADA;UAEAI,WAFA;UAGAqB,cAHA;UAIAK;YACAX,UADA;YAEAY,eAFA;YAGAC,YAHA;YAIAC,kBAJA;YAKAC,oBALA;YAMAC,eANA;YAOAC;UAPA,CAJA;UAaA7B;YACA;cACA8B,eADA;cAEAC,eAFA;cAGAZ;gBACAE;cADA;YAHA;UAOA,CARA;QAbA,CAlBA,EAyCA;UACA5B,kBADA;UAEAI,YAFA;UAGAmC,cAHA;UAIAC,kBAJA;UAKAC,cALA;UAMAC;YACAvB,UADA;YAEAS,yBAFA;YAGAe,cAHA;YAIAC,uBAJA;YAKAC,YALA;YAMAT;cACA;YACA;UARA,CANA;UAgBAU;YACAlB,0BADA;YAEAmB;UAFA,CAhBA;UAoBAxC;YACA;cACA8B,gBADA;cAEAC;YAFA;UAIA,CALA;QApBA,CAzCA;MA1BA;IADA;EAkGA,CAjHA;;EAkHAU;IACA;EACA;;AApHA","names":["name","mixins","props","chartData","type","default","stepLineColor","data","businessOptions","tooltip","trigger","axisPointer","grid","left","right","bottom","top","containLabel","xAxis","show","axisLine","onZero","yAxis","series","barWidth","stack","itemStyle","borderColor","color","emphasis","label","position","fontSize","fontWeight","overflow","ellipsis","formatter","value","price","step","connectNulls","symbol","endLabel","align","verticalAlign","distance","lineStyle","width","mounted"],"sourceRoot":"src/components/universal/Charts","sources":["BusinessChart.vue"],"sourcesContent":["<template>\n  <v-chart ref=\"businessChart\" class=\"h-[15rem]\" :option=\"businessOptions\"/>\n</template>\n\n<script>\nimport resizeChart from \"@/mixins/resizeChart\";\nexport default {\n  name: \"BusinessChart\",\n  mixins: [ resizeChart ],\n  props: {\n    chartData: {\n      type: Array,\n      default: () => []\n    },\n    stepLineColor: {\n      type: String,\n      default: '#3B82F6'\n    }\n  },\n  data() {\n    const self = this\n    return {\n      businessOptions: {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        grid: {\n          left: '-7%',\n          right: '4%',\n          bottom: '3%',\n          top: '4%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          show: false,\n          axisLine: {\n            onZero: true,\n          },\n          data: self.chartData.map(el => el?.labelName)\n        },\n        yAxis: {\n          type: 'value',\n          show: false\n        },\n        series: [\n          {\n            name: 'Placeholder',\n            type: 'bar',\n            barWidth: 80,\n            stack: 'Total',\n            itemStyle: {\n              borderColor: 'transparent',\n              color: 'transparent'\n            },\n            emphasis: {\n              itemStyle: {\n                borderColor: 'transparent',\n                color: 'transparent'\n              }\n            },\n            data: self.chartData.map(el => el?.marginBottom)\n          },\n          {\n            name: 'Life Cost',\n            type: 'bar',\n            stack: 'Total',\n            label: {\n              show: true,\n              position: 'top',\n              fontSize: 10,\n              fontWeight: 'bold',\n              overflow: 'truncate',\n              ellipsis: '...',\n              formatter: params => `${params.name} $${params.data.price}`\n            },\n            data: self.chartData.map(el => {\n              return {\n                value: el.value,\n                price: el.price,\n                itemStyle: {\n                  color: el.color\n                }\n              }\n            })\n          },\n          {\n            name: 'Step Start',\n            type: 'line',\n            step: 'middle',\n            connectNulls: true,\n            symbol: 'none',\n            endLabel: {\n              show: true,\n              color: self.stepLineColor,\n              align: 'right',\n              verticalAlign: 'bottom',\n              distance: 80,\n              formatter: params => {\n                return `Markets ${params.data.price - 0.01}`\n              }\n            },\n            lineStyle: {\n              color: self?.stepLineColor,\n              width: 1\n            },\n            data: self.chartData.map(el => {\n              return {\n                value: el?.value,\n                price: el?.price\n              }\n            })\n          },\n        ]\n      }\n    }\n  },\n  mounted() {\n    this.setRefElement('businessChart')\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}
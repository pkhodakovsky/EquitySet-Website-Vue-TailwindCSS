{"ast":null,"code":"//\n//\n//\n//\nimport resizeChart from \"@/mixins/resizeChart\";\nexport default {\n  name: \"BarHorizontalChart\",\n  mixins: [resizeChart],\n  props: {\n    backgroundColor: {\n      type: String,\n      default: '#ECECF4'\n    },\n    itemColor: {\n      type: String,\n      default: '#5B6270'\n    },\n    barWidth: {\n      type: [String, Number],\n      default: 'auto'\n    },\n    dataChart: {\n      type: Array,\n      default: () => []\n    },\n    dataYAxis: {\n      type: Array,\n      default: () => []\n    },\n    showYLabels: {\n      type: Boolean,\n      default: true\n    },\n    showBarLabels: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    const self = this;\n    return {\n      barOptions: {\n        grid: {\n          left: self.showYLabels ? '0%' : '-20%',\n          right: '2%',\n          bottom: '2%',\n          top: '20%',\n          containLabel: true\n        },\n        tooltip: {\n          trigger: 'item',\n          axisPointer: {\n            type: 'shadow'\n          },\n          formatter: params => {\n            return `<p>$${params.value}</p>`;\n          }\n        },\n        label: {\n          show: self.showBarLabels,\n          position: 'right',\n          formatter: '{b}',\n          fontStyle: 10\n        },\n        legend: {\n          show: false\n        },\n        xAxis: {\n          type: 'value',\n          boundaryGap: [0, 0.01],\n          show: false,\n          max: 30000\n        },\n        yAxis: {\n          type: 'category',\n          data: self.dataYAxis,\n          show: self.showYLabels,\n          axisTick: {\n            alignWithLabel: true\n          },\n          axisLabel: {\n            fontSize: 10\n          }\n        },\n        series: [{\n          barWidth: self.barWidth,\n          showBackground: true,\n          backgroundStyle: {\n            color: self.backgroundColor,\n            borderRadius: [0, 3, 3, 0]\n          },\n          itemStyle: {\n            color: self.itemColor,\n            borderRadius: [0, 3, 3, 0],\n            borderWidth: 1,\n            borderType: 'solid'\n          },\n          type: 'bar',\n          data: self.dataChart,\n          markLine: {\n            data: [{\n              type: \"average\"\n            }],\n            lineStyle: {\n              type: 'solid'\n            },\n            label: {\n              show: true,\n              position: 'end',\n              formatter: '  ${c} \\n Average'\n            },\n            symbol: \"none\"\n          }\n        }]\n      }\n    };\n  },\n\n  mounted() {\n    this.setRefElement('horizontalChart');\n  }\n\n};","map":{"version":3,"mappings":";;;;AAKA;AACA;EACAA,0BADA;EAEAC,qBAFA;EAGAC;IACAC;MACAC,YADA;MAEAC;IAFA,CADA;IAKAC;MACAF,YADA;MAEAC;IAFA,CALA;IASAE;MACAH,sBADA;MAEAC;IAFA,CATA;IAaAG;MACAJ,WADA;MAEAC;IAFA,CAbA;IAiBAI;MACAL,WADA;MAEAC;IAFA,CAjBA;IAqBAK;MACAN,aADA;MAEAC;IAFA,CArBA;IAyBAM;MACAP,aADA;MAEAC;IAFA;EAzBA,CAHA;;EAiCAO;IACA;IACA;MACAC;QACAC;UACAC,sCADA;UAEAC,WAFA;UAGAC,YAHA;UAIAC,UAJA;UAKAC;QALA,CADA;QAQAC;UACAC,eADA;UAEAC;YACAlB;UADA,CAFA;UAKAmB;YACA;UACA;QAPA,CARA;QAiBAC;UACAC,wBADA;UAEAC,iBAFA;UAGAH,gBAHA;UAIAI;QAJA,CAjBA;QAuBAC;UACAH;QADA,CAvBA;QA0BAI;UACAzB,aADA;UAEA0B,sBAFA;UAGAL,WAHA;UAIAM;QAJA,CA1BA;QAgCAC;UACA5B,gBADA;UAEAQ,oBAFA;UAGAa,sBAHA;UAIAQ;YACAC;UADA,CAJA;UAOAC;YACAC;UADA;QAPA,CAhCA;QA2CAC,SACA;UACA9B,uBADA;UAEA+B,oBAFA;UAGAC;YACAC,2BADA;YAEAC;UAFA,CAHA;UAOAC;YACAF,qBADA;YAEAC,0BAFA;YAGAE,cAHA;YAIAC;UAJA,CAPA;UAaAxC,WAbA;UAcAQ,oBAdA;UAeAiC;YACAjC;cACAR;YADA,EADA;YAIA0C;cACA1C;YADA,CAJA;YAOAoB;cACAC,UADA;cAEAC,eAFA;cAGAH;YAHA,CAPA;YAYAwB;UAZA;QAfA,CADA;MA3CA;IADA;EA8EA,CAjHA;;EAkHAC;IACA;EACA;;AApHA","names":["name","mixins","props","backgroundColor","type","default","itemColor","barWidth","dataChart","dataYAxis","showYLabels","showBarLabels","data","barOptions","grid","left","right","bottom","top","containLabel","tooltip","trigger","axisPointer","formatter","label","show","position","fontStyle","legend","xAxis","boundaryGap","max","yAxis","axisTick","alignWithLabel","axisLabel","fontSize","series","showBackground","backgroundStyle","color","borderRadius","itemStyle","borderWidth","borderType","markLine","lineStyle","symbol","mounted"],"sourceRoot":"src/components/universal/Charts","sources":["BarHorizontalChart.vue"],"sourcesContent":["<template>\n  <v-chart ref=\"horizontalChart\" class=\"h-[14rem]\" :option=\"barOptions\"/>\n</template>\n\n<script>\nimport resizeChart from \"@/mixins/resizeChart\";\nexport default {\n  name: \"BarHorizontalChart\",\n  mixins: [ resizeChart ],\n  props: {\n    backgroundColor: {\n      type: String,\n      default: '#ECECF4'\n    },\n    itemColor: {\n      type: String,\n      default: '#5B6270'\n    },\n    barWidth: {\n      type: [String, Number],\n      default: 'auto'\n    },\n    dataChart: {\n      type: Array,\n      default: () => []\n    },\n    dataYAxis: {\n      type: Array,\n      default: () => []\n    },\n    showYLabels: {\n      type: Boolean,\n      default: true\n    },\n    showBarLabels: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    const self = this\n    return {\n      barOptions: {\n        grid: {\n          left: self.showYLabels ? '0%' : '-20%',\n          right: '2%',\n          bottom: '2%',\n          top: '20%',\n          containLabel: true,\n        },\n        tooltip: {\n          trigger: 'item',\n          axisPointer: {\n            type: 'shadow'\n          },\n          formatter: params => {\n            return `<p>$${params.value}</p>`\n          }\n        },\n        label: {\n          show: self.showBarLabels,\n          position: 'right',\n          formatter: '{b}',\n          fontStyle: 10\n        },\n        legend: {\n          show: false\n        },\n        xAxis: {\n          type: 'value',\n          boundaryGap: [0, 0.01],\n          show: false,\n          max: 30000\n        },\n        yAxis: {\n          type: 'category',\n          data: self.dataYAxis,\n          show: self.showYLabels,\n          axisTick: {\n            alignWithLabel: true\n          },\n          axisLabel: {\n            fontSize: 10\n          }\n        },\n        series: [\n          {\n            barWidth: self.barWidth,\n            showBackground: true,\n            backgroundStyle: {\n              color: self.backgroundColor,\n              borderRadius: [0, 3, 3 ,0]\n            },\n            itemStyle: {\n              color: self.itemColor,\n              borderRadius: [0, 3, 3, 0],\n              borderWidth: 1,\n              borderType: 'solid'\n            },\n            type: 'bar',\n            data: self.dataChart,\n            markLine: {\n              data: [{\n                type: \"average\"\n              }],\n              lineStyle: {\n                type: 'solid'\n              },\n              label: {\n                show: true,\n                position: 'end',\n                formatter: '  ${c} \\n Average'\n              },\n              symbol: \"none\"\n            },\n          }\n        ]\n      }\n    }\n  },\n  mounted() {\n    this.setRefElement('horizontalChart')\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}
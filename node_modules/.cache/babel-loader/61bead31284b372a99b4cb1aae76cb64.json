{"ast":null,"code":"var Layer = {\n  props: {\n    pane: {\n      type: String,\n      default: 'overlayPane'\n    },\n    attribution: {\n      type: String,\n      default: null,\n      custom: true\n    },\n    name: {\n      type: String,\n      custom: true,\n      default: undefined\n    },\n    layerType: {\n      type: String,\n      custom: true,\n      default: undefined\n    },\n    visible: {\n      type: Boolean,\n      custom: true,\n      default: true\n    }\n  },\n  mounted: function mounted() {\n    this.layerOptions = {\n      attribution: this.attribution,\n      pane: this.pane\n    };\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.unbindPopup();\n    this.unbindTooltip();\n    this.parentContainer.removeLayer(this);\n  },\n  methods: {\n    setAttribution: function setAttribution(val, old) {\n      var attributionControl = this.$parent.mapObject.attributionControl;\n      attributionControl.removeAttribution(old).addAttribution(val);\n    },\n    setName: function setName() {\n      this.parentContainer.removeLayer(this);\n\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setLayerType: function setLayerType() {\n      this.parentContainer.removeLayer(this);\n\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setVisible: function setVisible(isVisible) {\n      if (this.mapObject) {\n        if (isVisible) {\n          this.parentContainer.addLayer(this);\n        } else {\n          if (this.parentContainer.hideLayer) {\n            this.parentContainer.hideLayer(this);\n          } else {\n            this.parentContainer.removeLayer(this);\n          }\n        }\n      }\n    },\n    unbindTooltip: function unbindTooltip() {\n      var tooltip = this.mapObject ? this.mapObject.getTooltip() : null;\n\n      if (tooltip) {\n        tooltip.unbindTooltip();\n      }\n    },\n    unbindPopup: function unbindPopup() {\n      var popup = this.mapObject ? this.mapObject.getPopup() : null;\n\n      if (popup) {\n        popup.unbindPopup();\n      }\n    },\n    updateVisibleProp: function updateVisibleProp(value) {\n      /**\n       * Triggers when the visible prop needs to be updated\n       * @type {boolean}\n       * @property {boolean} value - value of the visible property\n       */\n      this.$emit('update:visible', value);\n    }\n  }\n};\nvar GridLayer = {\n  mixins: [Layer],\n  props: {\n    pane: {\n      type: String,\n      default: 'tilePane'\n    },\n    opacity: {\n      type: Number,\n      custom: false,\n      default: 1.0\n    },\n    zIndex: {\n      type: Number,\n      default: 1\n    },\n    tileSize: {\n      type: Number,\n      default: 256\n    },\n    noWrap: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted: function mounted() {\n    this.gridLayerOptions = Object.assign({}, this.layerOptions, {\n      pane: this.pane,\n      opacity: this.opacity,\n      zIndex: this.zIndex,\n      tileSize: this.tileSize,\n      noWrap: this.noWrap\n    });\n  }\n};\nvar TileLayer = {\n  mixins: [GridLayer],\n  props: {\n    tms: {\n      type: Boolean,\n      default: false\n    },\n    subdomains: {\n      type: [String, Array],\n      default: 'abc',\n      validator: function (prop) {\n        if (typeof prop === 'string') {\n          return true;\n        } // Validates array that array only contains only strings\n\n\n        if (Array.isArray(prop)) {\n          return prop.every(function (subdomain) {\n            return typeof subdomain === 'string';\n          });\n        }\n\n        return false;\n      }\n    },\n    detectRetina: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted: function mounted() {\n    this.tileLayerOptions = Object.assign({}, this.gridLayerOptions, {\n      tms: this.tms,\n      subdomains: this.subdomains,\n      detectRetina: this.detectRetina\n    });\n  },\n  render: function render() {\n    return null;\n  }\n};\nvar TileLayerWMS = {\n  mixins: [TileLayer],\n  props: {\n    layers: {\n      type: String,\n      default: ''\n    },\n    styles: {\n      type: String,\n      default: ''\n    },\n    format: {\n      type: String,\n      default: 'image/jpeg'\n    },\n    transparent: {\n      type: Boolean,\n      custom: false\n    },\n    version: {\n      type: String,\n      default: '1.1.1'\n    },\n    crs: {\n      default: null\n    },\n    upperCase: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted: function mounted() {\n    this.tileLayerWMSOptions = Object.assign({}, this.tileLayerOptions, {\n      layers: this.layers,\n      styles: this.styles,\n      format: this.format,\n      transparent: this.transparent,\n      version: this.version,\n      crs: this.crs,\n      upperCase: this.upperCase\n    });\n  }\n};\nexport default TileLayerWMS;","map":{"version":3,"names":["Layer","props","pane","type","String","default","attribution","custom","name","undefined","layerType","visible","Boolean","mounted","layerOptions","beforeDestroy","unbindPopup","unbindTooltip","parentContainer","removeLayer","methods","setAttribution","val","old","attributionControl","$parent","mapObject","removeAttribution","addAttribution","setName","addLayer","setLayerType","setVisible","isVisible","hideLayer","tooltip","getTooltip","popup","getPopup","updateVisibleProp","value","$emit","GridLayer","mixins","opacity","Number","zIndex","tileSize","noWrap","gridLayerOptions","Object","assign","TileLayer","tms","subdomains","Array","validator","prop","isArray","every","subdomain","detectRetina","tileLayerOptions","render","TileLayerWMS","layers","styles","format","transparent","version","crs","upperCase","tileLayerWMSOptions"],"sources":["/Users/macbook/Documents/projects/assigment/test13/node_modules/vue2-leaflet/dist/mixins/TileLayerWMS.js"],"sourcesContent":["var Layer = {\n  props: {\n    pane: {\n      type: String,\n      default: 'overlayPane',\n    },\n    attribution: {\n      type: String,\n      default: null,\n      custom: true,\n    },\n    name: {\n      type: String,\n      custom: true,\n      default: undefined,\n    },\n    layerType: {\n      type: String,\n      custom: true,\n      default: undefined,\n    },\n    visible: {\n      type: Boolean,\n      custom: true,\n      default: true,\n    },\n  },\n  mounted: function mounted() {\n    this.layerOptions = {\n      attribution: this.attribution,\n      pane: this.pane,\n    };\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.unbindPopup();\n    this.unbindTooltip();\n    this.parentContainer.removeLayer(this);\n  },\n  methods: {\n    setAttribution: function setAttribution(val, old) {\n      var attributionControl = this.$parent.mapObject.attributionControl;\n      attributionControl.removeAttribution(old).addAttribution(val);\n    },\n    setName: function setName() {\n      this.parentContainer.removeLayer(this);\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setLayerType: function setLayerType() {\n      this.parentContainer.removeLayer(this);\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setVisible: function setVisible(isVisible) {\n      if (this.mapObject) {\n        if (isVisible) {\n          this.parentContainer.addLayer(this);\n        } else {\n          if (this.parentContainer.hideLayer) {\n            this.parentContainer.hideLayer(this);\n          } else {\n            this.parentContainer.removeLayer(this);\n          }\n        }\n      }\n    },\n    unbindTooltip: function unbindTooltip() {\n      var tooltip = this.mapObject ? this.mapObject.getTooltip() : null;\n      if (tooltip) {\n        tooltip.unbindTooltip();\n      }\n    },\n    unbindPopup: function unbindPopup() {\n      var popup = this.mapObject ? this.mapObject.getPopup() : null;\n      if (popup) {\n        popup.unbindPopup();\n      }\n    },\n    updateVisibleProp: function updateVisibleProp(value) {\n      /**\n       * Triggers when the visible prop needs to be updated\n       * @type {boolean}\n       * @property {boolean} value - value of the visible property\n       */\n      this.$emit('update:visible', value);\n    },\n  },\n};\n\nvar GridLayer = {\n  mixins: [Layer],\n  props: {\n    pane: {\n      type: String,\n      default: 'tilePane'\n    },\n    opacity: {\n      type: Number,\n      custom: false,\n      default: 1.0\n    },\n    zIndex: {\n      type: Number,\n      default: 1\n    },\n    tileSize: {\n      type: Number,\n      default: 256\n    },\n    noWrap: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted: function mounted () {\n    this.gridLayerOptions = Object.assign({}, this.layerOptions,\n      {pane: this.pane,\n      opacity: this.opacity,\n      zIndex: this.zIndex,\n      tileSize: this.tileSize,\n      noWrap: this.noWrap});\n  }\n};\n\nvar TileLayer = {\n  mixins: [GridLayer],\n  props: {\n    tms: {\n      type: Boolean,\n      default: false,\n    },\n    subdomains: {\n      type: [String, Array],\n      default: 'abc',\n      validator: function (prop) {\n        if (typeof prop === 'string') { return true; }\n        // Validates array that array only contains only strings\n        if (Array.isArray(prop)) {\n          return prop.every(function (subdomain) { return typeof subdomain === 'string'; });\n        }\n        return false;\n      },\n    },\n    detectRetina: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  mounted: function mounted() {\n    this.tileLayerOptions = Object.assign({}, this.gridLayerOptions,\n      {tms: this.tms,\n      subdomains: this.subdomains,\n      detectRetina: this.detectRetina});\n  },\n  render: function render() {\n    return null;\n  },\n};\n\nvar TileLayerWMS = {\n  mixins: [TileLayer],\n  props: {\n    layers: {\n      type: String,\n      default: ''\n    },\n    styles: {\n      type: String,\n      default: ''\n    },\n    format: {\n      type: String,\n      default: 'image/jpeg'\n    },\n    transparent: {\n      type: Boolean,\n      custom: false\n    },\n    version: {\n      type: String,\n      default: '1.1.1'\n    },\n    crs: {\n      default: null\n    },\n    upperCase: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted: function mounted () {\n    this.tileLayerWMSOptions = Object.assign({}, this.tileLayerOptions,\n      {layers: this.layers,\n      styles: this.styles,\n      format: this.format,\n      transparent: this.transparent,\n      version: this.version,\n      crs: this.crs,\n      upperCase: this.upperCase});\n  }\n};\n\nexport default TileLayerWMS;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"StateBoxes\",\n  props: {\n    boxLength: {\n      type: [Number, String],\n      default: 0\n    },\n    color: {\n      type: String,\n      default: '#1B2230'\n    },\n    activeBoxes: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data: () => ({\n    boxesData: []\n  }),\n\n  mounted() {\n    for (let index = 0; index < this.boxLength; index++) {\n      this.boxesData.push({\n        active: false,\n        id: index\n      });\n    }\n\n    this.activeBoxes.forEach(box => {\n      if (this.boxesData[box]) {\n        this.boxesData[box] = { ...this.boxesData[box],\n          active: true\n        };\n      }\n    });\n  }\n\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAkBA;EACAA,kBADA;EAEAC;IACAC;MACAC,sBADA;MAEAC;IAFA,CADA;IAKAC;MACAF,YADA;MAEAC;IAFA,CALA;IASAE;MACAH,WADA;MAEAC;IAFA;EATA,CAFA;EAgBAG;IACAC;EADA,EAhBA;;EAmBAC;IACA;MACA;QACAC,aADA;QAEAC;MAFA;IAIA;;IACA;MACA;QACA;UAAAD;QAAA;MACA;IACA,CAJA;EAKA;;AA/BA","names":["name","props","boxLength","type","default","color","activeBoxes","data","boxesData","mounted","active","id"],"sourceRoot":"src/components/universal","sources":["StateBoxes.vue"],"sourcesContent":["<template>\n  <div class=\"flex\">\n    <slot/>\n    <div\n      v-for=\"(box, index) in boxesData\"\n      :key=\"index\"\n      class=\"flex justify-center items-center h-5 w-5 bg-mischka rounded-sm mr-[3px]\"\n      :style=\"{ backgroundColor: box.active ? color : '' }\"\n    >\n      <span\n        v-if=\"box.active\"\n        class=\"inline-block h-2 w-2 rounded-full bg-white\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"StateBoxes\",\n  props: {\n    boxLength: {\n      type: [Number, String],\n      default: 0\n    },\n    color: {\n      type: String,\n      default: '#1B2230'\n    },\n    activeBoxes: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data: () => ({\n    boxesData: []\n  }),\n  mounted() {\n    for(let index = 0; index < this.boxLength; index++) {\n      this.boxesData.push({\n        active: false,\n        id: index\n      })\n    }\n    this.activeBoxes.forEach(box => {\n      if(this.boxesData[box]) {\n        this.boxesData[box] = { ...this.boxesData[box], active: true }\n      }\n    })\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}